@using EventR.Cli.Requests.Queries.GetSavedEventLocations

@inject IRequestDispatcher RequestDispatcher

<MudDialog>
    <DialogContent>
        <MudTextField @bind-Value="_name" Label="Name" Variant="Variant.Outlined"></MudTextField>
        <MudSelect @bind-Value="@_selectedLocationIdentifier" Label="Location" Variant="Variant.Outlined">
            @foreach (var location in _locations)
            {
                <MudSelectItem Value="@location.Identifier">
                    <MudText Class="mb-2">@location.Name</MudText>
                    <MudText Typo="Typo.caption">@location.Path</MudText>
                </MudSelectItem>
            }
        </MudSelect>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
        <MudButton Color="Color.Primary" OnClick="Submit" Disabled="@(!CanSubmit)">Save</MudButton>
    </DialogActions>
</MudDialog>

@code {

    [CascadingParameter]
    public IMudDialogInstance DialogInstance { get; set; } = null!;

    [Parameter]
    public string? InitialName { get; set; }

    [Parameter]
    public string? InitialLocationIdentifier { get; set; }

    private bool CanSubmit => !string.IsNullOrWhiteSpace(_name);

    private string? _selectedLocationIdentifier;

    private IEnumerable<SavedEventLocationDto> _locations = [];

    private string? _name { get; set; }

    protected override void OnInitialized()
    {
        _name = InitialName;
        _selectedLocationIdentifier = InitialLocationIdentifier;
        _locations = RequestDispatcher.DispatchQuery(new GetSavedEventLocationsQuery());
    }

    private void Cancel()
    {
        DialogInstance.Cancel();
    }

    private void Submit()
    {
        if (_name != null && _selectedLocationIdentifier != null)
        {
            DialogInstance.Close(new SaveEventDialogResponse
            {
                Name = _name,
                LocationIdentifier = _selectedLocationIdentifier
            });
        }
    }

    public record SaveEventDialogResponse
    {
        public required string Name { get; init; }

        public required string LocationIdentifier { get; init; }       
    }
}